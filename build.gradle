plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

apply {
	from('gradle/docker.gradle')
}

ext {
	set('springCloudVersion', "Hoxton.SR8")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

group = 'com.somacode'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile "org.springframework.boot:spring-boot-starter-jdbc"
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	// Security
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	compile "org.springframework.cloud:spring-cloud-starter-oauth2"
	compile "org.springframework.security:spring-security-config"
	compile "org.springframework.security:spring-security-data"
	compile "org.springframework.security:spring-security-web"

	// Jackson Datatype
	compile "joda-time:joda-time:2.9.9"
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.11.1'

	// Codehaus JacksonMapper
	implementation 'org.codehaus.jackson:jackson-mapper-asl:1.9.13' // para el ObjectMapper de PatchTool

	// Gson
	compile "com.google.code.gson:gson"

	//JWT
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	compile 'io.jsonwebtoken:jjwt:0.9.1'

	// The file upload depends on this
	compile 'commons-fileupload:commons-fileupload:1.4'
}

test {
	useJUnitPlatform()
}
